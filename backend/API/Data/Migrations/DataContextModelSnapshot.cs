// <auto-generated />
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("API.Entities.Formulario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Formularios");
                });

            modelBuilder.Entity("API.Entities.Input", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("EsObligatorio")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("FormularioId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("TipoDato")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FormularioId");

                    b.ToTable("Inputs");
                });

            modelBuilder.Entity("API.Entities.RespuestaFormulario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FormularioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FormularioId");

                    b.ToTable("RespuestasFormularios");
                });

            modelBuilder.Entity("API.Entities.RespuestaInput", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("InputId")
                        .HasColumnType("int");

                    b.Property<int?>("RespuestaFormularioId")
                        .HasColumnType("int");

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("InputId");

                    b.HasIndex("RespuestaFormularioId");

                    b.ToTable("RespuestasInputs");
                });

            modelBuilder.Entity("API.Entities.Input", b =>
                {
                    b.HasOne("API.Entities.Formulario", "Formulario")
                        .WithMany("Inputs")
                        .HasForeignKey("FormularioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Formulario");
                });

            modelBuilder.Entity("API.Entities.RespuestaFormulario", b =>
                {
                    b.HasOne("API.Entities.Formulario", "Formulario")
                        .WithMany()
                        .HasForeignKey("FormularioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Formulario");
                });

            modelBuilder.Entity("API.Entities.RespuestaInput", b =>
                {
                    b.HasOne("API.Entities.Input", "Input")
                        .WithMany()
                        .HasForeignKey("InputId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Entities.RespuestaFormulario", null)
                        .WithMany("RespuestasInputs")
                        .HasForeignKey("RespuestaFormularioId");

                    b.Navigation("Input");
                });

            modelBuilder.Entity("API.Entities.Formulario", b =>
                {
                    b.Navigation("Inputs");
                });

            modelBuilder.Entity("API.Entities.RespuestaFormulario", b =>
                {
                    b.Navigation("RespuestasInputs");
                });
#pragma warning restore 612, 618
        }
    }
}
